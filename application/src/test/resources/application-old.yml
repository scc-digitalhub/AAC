server:
  contextPath: /aac

application:
  url: http://localhost:8080/aac

jdbc:
  dialect: org.hibernate.dialect.H2Dialect
  driver: org.h2.Driver
  url: jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1
  user: ac
  password: ac

spring:
  messages:
    basename: resources/internal
    encoding: UTF-8


security:
  restricted: false
  adminfile: 
  basic:
      enabled: false
  rememberme:
    key: 12345
  cie:
    idp: Smart Community
    pattern: "Inserisci il PIN per accedere a %1$s tramite %2$s"
    defaultsp: Smart Community
  identity: # IDENTITY MAPPING SOURCE FILE
    source: file:///path/to/identities.txt


oauth-providers:
  providers:
    - provider: facebook
      client:
        clientId: 
        clientSecret: 
        accessTokenUri: https://graph.facebook.com/oauth/access_token
        userAuthorizationUri: https://www.facebook.com/dialog/oauth
        tokenName: oauth_token
        authenticationScheme: query
        clientAuthenticationScheme: form
        scope:
            - openid
            - email
            - profile    
    - provider: google
      client:
        clientId: 
        clientSecret: 
        accessTokenUri: https://www.googleapis.com/oauth2/v3/token
        userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
        clientAuthenticationScheme: form
        scope:
            - openid
            - email
            - profile
      resource:        
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
        preferTokenInfo: true        

authorization:
  contextSpace: authorization

admin:
  password: admin
  contexts: apimanager
  contextSpaces: apimanager/carbon.super  

adminClient:
  id: API_MGT_CLIENT_ID
  secret: 123456789

mail:
  username: info@smartcommunitylab.it
  password: 
  host: smtp.smartcommunitylab.it
  port: 465
  protocol: smtps 

logging:
  level:
    org.springframework.security: DEBUG

api:
  contextSpace: apimanager
  adminClient:
    id: API_MGT_CLIENT_ID
    secret: YOUR_API_MNGMT_CLIENT_SECRET
  internalUrl: http://localhost:8080/aac  
  store:
    endpoint: https://localhost:9443/api/am/store/v0.10 
  publisher:
    endpoint: https://localhost:9443/api/am/publisher/v0.10
  identity:
    endpoint: https://localhost:9443/services/IdentityApplicationManagementService
    password: admin    
  usermgmt:
    endpoint: https://localhost:9443/services/RemoteUserStoreManagerService
    password: admin    
  multitenancy:
    endpoint: https://localhost:9443/services/TenantMgtAdminService
    password: admin      
    
    
swagger:
  title: 
    AAC: AAC API - Profile and token info 
    AACApiKey: AAC API - API Access Key management
    AACAuthorization: AAC API - Authorization management 
    AACRoles: AAC API - Role management 
  description: 
    AAC: Authorization and Authentication Control APIs - Profile and token info 
    AACApiKey: Authorization and Authentication Control APIs - API Key validation and management
    AACAuthorization: Authorization and Authentication Control APIs - Authorization management 
    AACRoles: Authorization and Authentication Control APIs - Role managment
  version: 1.0.0
  license: Apache License, Version 2.0
  licenseUrl: http://www.apache.org/licenses/LICENSE-2.0
  contact:
    name:  Smart Community Lab
    url: www.smartcommunitylab.it
    email: info@smartcommunitylab.it    
    
# OPEN ID
openid:
  issuer: http://localhost:8080/aac
[
  {
    "serviceId": "aac.oidc",
    "name": "OpenID Connect",
    "description": "Core service for accessing user profiles",
    "scopes": [
      {
        "scope": "openid",
        "name": "Read user's username",
        "description": "User identity information (username and identifier). Read access only.",
        "claims": [ "username", "user_name", "preferred_username"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "profile",
        "name": "Read user's standard profile",
        "description": "Basic user profile data (name, surname, email). Read access only.",
        "claims": ["username", "user_name", "preferred_username", "name", "given_name", "family_name", "middle_name", "nickname", "profile", "picture", "website", "gender", "zoneinfo", "locale", "updated_at", "birthdate"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "email",
        "name": "Read user's email",
        "description": "Basic user's email.",
        "claims": ["email", "email_verified"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "address",
        "name": "Read user's address",
        "description": "Basic user's address.",
        "claims": ["address"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "phone",
        "name": "Read user's phone",
        "description": "Basic user's phone.",
        "claims": ["phone_number", "phone_number_verified"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      }
    ],
    "claims": [
        { "claim": "username",  "name": "user name", "multiple": false, "type": "string" }, 
        { "claim": "user_name",  "name": "user name", "multiple": false, "type": "string" }, 
        { "claim": "preferred_username",  "name": "preferred user name", "multiple": false, "type": "string" }, 
        { "claim": "name",  "name": "full name", "multiple": false, "type": "string" }, 
        { "claim": "given_name",  "name": "given name", "multiple": false, "type": "string" }, 
        { "claim": "family_name",  "name": "family name", "multiple": false, "type": "string" }, 
        { "claim": "middle_name",  "name": "middle name", "multiple": false, "type": "string" }, 
        { "claim": "nickname",  "name": "nickname", "multiple": false, "type": "string" }, 
        { "claim": "profile",  "name": "profile", "multiple": false, "type": "string" }, 
        { "claim": "picture",  "name": "picture", "multiple": false, "type": "string" }, 
        { "claim": "website",  "name": "website", "multiple": false, "type": "string" }, 
        { "claim": "gender",  "name": "gender", "multiple": false, "type": "string" }, 
        { "claim": "zoneinfo",  "name": "time zone info", "multiple": false, "type": "string" }, 
        { "claim": "locale",  "name": "locale", "multiple": false, "type": "string" }, 
        { "claim": "updated_at",  "name": "update time", "multiple": false, "type": "string" }, 
        { "claim": "birthdate",  "name": "birthday date", "multiple": false, "type": "string" }, 
        { "claim": "email",  "name": "email", "multiple": false, "type": "string" }, 
        { "claim": "email_verified",  "name": "verified email", "multiple": false, "type": "string" }, 
        { "claim": "phone_number",  "name": "phone number", "multiple": false, "type": "string" }, 
        { "claim": "phone_number_verified",  "name": "verified phone number", "multiple": false, "type": "string" }, 
        { "claim": "address",  "name": "address", "multiple": false, "type": "string" }, 
        { "claim": "accounts",  "name": "user accounts", "multiple": true, "type": "object" }
    ]
  },
  {
    "serviceId": "aac.roles",
    "name": "Role Service",
    "description": "Core service for accessing user roles.",
    "scopes": [
      {
        "scope": "user.roles.me",
        "name": "Read user roles",
        "description": "Read roles of the current user.",
        "claims": ["authorities", "roles", "realm_access", "resource_access", "space"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "user.groups.me",
        "name": "Read user groups",
        "description": "Read role groups of the current user.",
        "claims": ["groups"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      }
    ],
    "claims": [
         { "claim": "roles", "name": "roles", "multiple": true, "type": "string" }, 
         { "claim": "realm_access", "name": "realm access roles", "multiple": true, "type": "string" }, 
         { "claim": "authorities", "name": "authorities", "multiple": true, "type": "string" }, 
         { "claim": "groups", "name": "groups", "multiple": true, "type": "string" }, 
         { "claim": "resource_access", "name": "resouce access", "multiple": true, "type": "object" }, 
         { "claim": "space", "name": "space", "multiple": true, "type": "string" }         
    ]
  },  
  {
    "serviceId": "carbon.super-AAC-1.0.0",
    "name": "User profile service",
    "description": "Core service for managing basic user profiles",
    "scopes": [
      {
        "scope": "profile.basicprofile.me",
        "name": "Read user's basic profile",
        "description": "Basic profile of the current platform user. Read access only.",
        "claims": ["sub", "username", "user_name", "preferred_username", "name", "given_name", "family_name", "email"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "profile.basicprofile.all",
        "name": "Read all basic profiles",
        "description": "Basic profile of the platform users. Read access only.",
        "claims": [],
        "roles": ["components/apimanager/carbon.super:profilemanager"],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "profile.accountprofile.me",
        "name": "Read user's account profile",
        "description": "Account profile of the current platform user. Read access only.",
        "claims": ["accounts"],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "profile.accountprofile.all",
        "name": "Read all account profiles",
        "description": "Account profile of the platform users. Read access only.",
        "claims": [],
        "roles": ["components/apimanager/carbon.super:accountmanager"],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      }
    ],
    "claims": [
        { "claim": "accounts",  "name": "user accounts", "multiple": true, "type": "object" }
    ]
  },  
  
  {
    "serviceId": "smartcommunity.usermanagement",
    "name": "User management service",
    "description": "Core service for managing basic user profiles.",
    "scopes": [
      {
        "scope": "usermanagement",
        "name": "Manage users",
        "description": "Manage user data programmatically.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": true
      }
    ],
    "claims": []
  },
    {
    "serviceId": "smartcommunity.orgmanagement",
    "name": "Organization management service",
    "description": "Core service for managing organizations.",
    "scopes": [
      {
        "scope": "orgmanagement",
        "name": "Manage organizations",
        "description": "Manage organization data programmatically.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": true
      }
    ],
    "claims": []
  },
    {
    "serviceId": "smartcommunity.apimanagement",
    "name": "API Management Service",
    "description": "Core service for managing clients and APIs.",
    "scopes": [
      {
        "scope": "clientmanagement",
        "name": "Manage clients",
        "description": "Manage clients programmatically.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": true
      },
      {
        "scope": "apimanagement",
        "name": "Manage APIs",
        "description": "Manage APIs programmatically.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": true
      }      
    ],
    "claims": []
  },
    {
    "serviceId": "apikey.management",
    "name": "Api Key",
    "description": "Core service for managing api keys.",
    "scopes": [
      {
        "scope": "apikey.user.me",
        "name": "Manage Current User Api Keys",
        "description": "Manage current user Api Keys",
        "claims": [],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },
      {
        "scope": "apikey.user.client",
        "name": "Manage Current User Current Client Api Keys",
        "description": "Manage current user current client own Api Keys",
        "claims": [],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      },      
      {
        "scope": "apikey.client.me",
        "name": "Manage Current Client Api Keys",
        "description": "Manage current client Api Keys",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "apikey.client.all",
        "name": "Manage All Client Api Keys",
        "description": "Manage all Client Api Keys",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": true
      }      
    ],
    "claims": []
  },  
    {
    "serviceId": "service.management",
    "name": "Service Definition Management",
    "description": "Core service for managing service, scope, and claim definitions",
    "scopes": [
      {
        "scope": "servicemanagement",
        "name": "Manage service data",
        "description": "Manage definitions of services, scopes, and claims",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "servicemanagement.me",
        "name": "Manage owned service data",
        "description": "Manage owned definitions of services, scopes, and claims",
        "claims": [],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      }
      
    ],
    "claims": []
  },
  {
    "serviceId": "claim.management",
    "name": "Custom User Claim Management",
    "description": "Core service for managing custom user claims",
    "scopes": [
      {
        "scope": "claimmanagement",
        "name": "Manage custom user claims",
        "description": "Manage custom user claim values",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "claimmanagement.me",
        "name": "Manage custom claims for owned services",
        "description": "Manage custom user claims for the services owned by the user",
        "claims": [],
        "roles": [],
        "authority": "ROLE_USER",
        "approvalRequired": false
      }
      
    ],
    "claims": []
  },
    {
    "serviceId": "carbon.super-AACAuthorization-1.0.0",
    "name": "Authorization Service",
    "description": "Core service for managing peer-to-peer authorizations and authorization schemas",
    "scopes": [
      {
        "scope": "authorization.manage",
        "name": "Modify authorizations",
        "description": "Modify authorizations",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "authorization.schema.manage",
        "name": "Modify authorization schema",
        "description": "Modify authorization schema",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      }
    ],
    "claims": []
  },
    {
    "serviceId": "carbon.super-AACRoles-1.0.0",
    "name": "Role Management Service",
    "description": "Core service for managing user roles.",
    "scopes": [
      {
        "scope": "user.roles.write",
        "name": "Write user roles",
        "description": "Modify the roles of the specified user within a tenant.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "user.roles.read",
        "name": "Read user roles",
        "description": "Read the roles of the specified user within a tenant.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "user.roles.read.all",
        "name": "Read arbitrary user roles",
        "description": "Read the roles of any user.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "client.roles.read.all",
        "name": "Read client app roles",
        "description": "Read the roles of any app client.",
        "claims": [],
        "roles": [],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      },
      {
        "scope": "user.roles.manage.all",
        "name": "Manage all user roles",
        "description": "Manage all roles of the platform users.",
        "claims": [],
        "roles": ["components/apimanager/carbon.super:rolemanager"],
        "authority": "ROLE_CLIENT",
        "approvalRequired": false
      }
    ],
    "claims": []
  }
]
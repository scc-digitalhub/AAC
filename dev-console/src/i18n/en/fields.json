{
    "id": {
        "name": "Id",
        "helperText": "Unique identifier"
    },
    "name": {
        "name": "Name",
        "helperText": "Human readable name"
    },
    "description": {
        "name": "Description",
        "helperText": "Text describing the element, used for views"
    },
    "type": {
        "name": "Type",
        "helperText": "Type field"
    },
    "clientId": {
        "name": "ClientId",
        "helperText": "Client (unique) identifier"
    },
    "clientSecret": {
        "name": "Client Secret",
        "helperText": "Client Secret (unique) identifier"
    },
    "clientJwk": {
        "name": "Client Private Key (JWK)",
        "helperText": ""
    },
    "clientName": {
        "name": "Client Name",
        "helperText": ""
    },
    "clientAuthenticationMethod": {
        "name": "Client Authentication Method",
        "helperText": ""
    }, 
    "enablePkce": {
        "name": "Enable PKCE",
        "helperText": ""
    },
    "userNameAttributeName": {
        "name": "Username Attribute",
        "helperText": ""
    },
    "subAttributeName": {
        "name": "Subject attribute (if different from sub)",
        "helperText": ""
    },
    "trustEmailAddress": {
        "name": "trustEmailAddress",
        "helperText": ""
    },
    "requireEmailAddress": {
        "name": "requireEmailAddress",
        "helperText": ""
    },
    "alwaysTrustEmailAddress": {
        "name": "alwaysTrustEmailAddress",
        "helperText": ""
    },
    "authorizationUri": {
        "name": "Authorization Endpoint",
        "helperText": ""
    },
    "tokenUri": {
        "name": "Token Endpoint",
        "helperText": ""
    },
    "jwkSetUri": {
        "name": "JWKS Endpoint",
        "helperText": ""
    },
    "userInfoUri": {
        "name": "Userinfo Endpoint",
        "helperText": ""
    },
    "issuerUri": {
        "name": "Issuer Endpoint",
        "helperText": ""
    },
    "propagateEndSession": {
        "name": "Propagate end session to idp",
        "helperText": ""
    },
    "respectTokenExpiration": {
        "name": "Use expiration from token for session",
        "helperText": ""
    },
    "promptMode": {
        "name": "Prompt Mode",
        "helperText": ""
    },
    "template_override": {
        "name": "Template Override",
        "helperText": ""
    },    
    "authorization_endpoint": "Authorization Endpoint",
    "token_endpoint": "Token Endpoint",
    "jwks_uri": "JWKS endpoint",
    "userinfo_endpoint": "Userinfo endpoint",
    "introspection_endpoint": "Introspection endpoint",
    "revocation_endpoint": "Revocation endpoint",
    "registration_endpoint": "Registration endpoint",
    "end_session_endpoint": "Endsession endpoint",   
    "slug": {
        "name": "Slug",
        "helperText": "Path-style (unique) identifier"
    },
    "public": {
        "name": "Public",
        "helperText": "Toggle for public/private visibility"
    },
    "languages": {
        "name": "Languages",
        "helperText": "List of languages (codes) enabled"
    },
    "applicationType": {
        "name": "Application type",
        "helperText": "Type of (OAuth2) application"
    },
    "title": {
        "name": "Title",
        "helperText": "Title used for views"
    },
    "customStyle": {
        "name": "Custom style",
        "helperText": "Define a custom style sheet (CSS) to be injected in pages"
    },
    "namespace": {
        "name": "Namespace",
        "helperText": "Service Namespace"
    },
    "scope": {
        "name": "Scope",
        "helperText": ""
    },
    "authority": {
        "name": "Authority",
        "helperText": ""
    },
    "approvalRoles": {
        "name": "Authorization with realm roles",
        "helperText": "approvalRoles.helperText"
    },
    "approvalFunction": {
        "name": "Authorization with approval function",
        "helperText": ""
    },
    "approvalAny": {
        "name": "One of",
        "helperText": ""
    },
    "approvalRequired": {
        "name": "Authorization with explicit approval",
        "helperText": ""
    },
    "multiple": {
        "name": "Is Array",
        "helperText": ""
    },
    "claimMapping": {
        "user": {
            "name": "User claim mapping",
            "helperText": "Claim mapping function should return fully-qualified claims of the current service ONLY. Service namespace is enforced when claims are added to tokens"
        },
        "client": {
            "name": "Client claim mapping",
            "helperText": "Claim mapping function should return fully-qualified claims of the current service ONLY. Service namespace is enforced when claims are added to tokens"
        }
    },
    "key": {
        "name": "Key",
        "helperText": ""
    },
    "groups": {
        "name": "Add a group",
        "helperText": ""
    },
    "roles": {
        "name": "Add custom role",
        "helperText": ""
    },
    "jwks": {
        "name": "Client Key Set (JWKS)"
    },
    "context": "context",
    "result": "result",
    "providers": {
        "name": "Providers",
        "helperText": ""
    },
    "scopes": {
        "name": "Scopes",
        "helperText": ""
    },
    "attributeSets": {
        "name": "Attribute Sets",
        "helperText": ""
    },
    "enabled": {
        "name": "Active"
    },
    "registered": {
        "name": "Registered"
    },
    "username": {
        "name": "Username"
    },
    "subjectId": {
        "name": "SubjectId",
        "helperText": ""
    },
    "identifier": {
        "name": "Set Identifier",
        "helperText": ""
    },
    "accounts": {
        "name": "accounts.name"
    },
    "status": {
        "name": "status.name"
    },
    "role": {
        "name": "Role",
        "helperText": ""
    },
    "subjects": {
        "name": "Subjects",
        "helperText": "Numer of associated subjects"
    },
    "permissions": {
        "name": "Permission",
        "helperText": ""
    },
    "group": {
        "name": "Group",
        "helperText": ""
    },
    "members": {
        "name": "Members",
        "helperText": "Total number of members"
    },
    "email": {
        "name": "Email Address",
        "helperText": ""
    },
    "keys": {
        "name": "keys.name"
    },
    "": "",
    "events": {
        "helperText": "",
        "name": "Audit events"
    },
    "linkable": {
        "helperText": "",
        "name": "Enable account linking"
    },
    "notes": {
        "helperText": "",
        "name": "Notes"
    },
    "oauth2": {
        "accessTokenValidity": {
            "helperText": "",
            "name": "Access token validity (sec)"
        },
        "applicationType": {
            "helperText": "",
            "name": "Application type"
        },
        "authenticationMethods": {
            "helperText": "",
            "name": "Authentication methods"
        },
        "authorizedGrantTypes": {
            "helperText": "",
            "name": "Grant types"
        },
        "enableClientRegistration": {
            "helperText": "Dynamic client registration with management (OAuth2 and OIDC). Authorized parties (with a valid bearer token) will be able to register a client",
            "name": "Enable Dynamic Client Registration"
        },
        "firstParty": {
            "helperText": "",
            "name": "First party"
        },
        "idTokenClaims": {
            "helperText": "",
            "name": "IdToken custom claims"
        },
        "openClientRegistration": {
            "helperText": "Open Dynamic Registration disables authentication for DCR endpoints",
            "name": "Enable Open Dynamic Client Registration"
        },
        "redirectUris": {
            "helperText": "",
            "name": "Redirect uris"
        },
        "refreshTokenRotation": {
            "helperText": "",
            "name": "Refresh token rotation"
        },
        "refreshTokenValidity": {
            "helperText": "",
            "name": "Refresh token validity (sec)"
        },
        "subjectType": {
            "helperText": "",
            "name": "Subject type"
        },
        "tokenType": {
            "helperText": "",
            "name": "Token type"
        }
    },
    "persistence": {
        "helperText": "",
        "name": "Persistence"
    },
    "position": {
        "helperText": "",
        "name": "Localization"
    },
    "tos": {
        "approveTOS": {
            "helperText": "",
            "name": "Approve Terms of Service"
        },
        "enableTOS": {
            "helperText": "",
            "name": "Enable Terms of Service"
        }
    },
    "webhooks": {
        "afterTokenGrant": {
            "helperText": "",
            "name": "After token grant webhook"
        },
        "afterUserApproval": {
            "helperText": "",
            "name": "After user approval webhook"
        },
        "beforeTokenGrant": {
            "helperText": "webhooks.beforeTokenGrant.helperText",
            "name": "Before token grant webhook"
        },
        "beforeUserApproval": {
            "helperText": "",
            "name": "Before user approval webhook"
        }
    },
    "time": {
        "name": "Time"
    },
    "principal": {
        "name": "Principal"
    },
    "issuer": "Issuer",
    "tosAccepted": {
        "name": "Approved"
    },
    "account": {
        "active": "Active",
        "inactive": "Inactive",
        "verified": "Verified",
        "unverified": "Unverified",
        "unlocked": "Unlocked",
        "confirmed": "Confirmed",
        "unconfirmed": "Unconfirmed"
    },
    "enableRegistration": {
        "name": "Enable Registration",
        "helperText": ""
    },
    "enableDelete": {
        "name": "Enable Delete",
        "helperText": ""
    },
    "enableUpdate": {
        "name": "Enable Update",
        "helperText": ""
    },
    "maxSessionDuration": {
        "name": "Max session duration",
        "helperText": ""
    },
    "confirmationRequired": {
        "name": "Confirmation Required",
        "helperText": ""
    },
    "confirmationValidity": {
        "name": "Confirmation duration (seconds)",
        "helperText": ""
    },
    "resource": {
        "name": "Resource",
        "helperText": ""
    },
    "usermode": {
        "name": "UserMode",
        "helperText": ""
    }
}